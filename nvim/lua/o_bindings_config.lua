require("which-key").register({
    j = {[[v:count?(v:count>5?"m'".v:count:'').'j':'gj']], "down", expr=true},
    k = {[[v:count?(v:count>5?"m'".v:count:'').'k':'gk']], "up", expr=true},
    H = {[[getline('.')[0:col('.')-2]=~#'^\s\+$'?'0':'^']], "Start of Line", expr=true},
    L = {[[getline('.')[col('.'):-1]=~#'^\s\+$'?'$':'g_']], "End of Line", expr=true},
    a = {
        name = "around",
        B = {":<c-u>TSTextobjectSelect @block.outer<cr>", "Block"},
        c = {":<c-u>TSTextobjectSelect @conditional.outer<cr>", "Conditional"},
        [","] = {":<c-u>TSTextobjectSelect @parameter.outer<cr>", "Parameter"},
        d = {":<c-u>TSTextobjectSelect @comment.outer<cr>", "Comment"},
        f = {":<c-u>TSTextobjectSelect @function.outer<cr>", "Function"},
        F = {":<c-u>TSTextobjectSelect @call.outer<cr>", "Function"},
        l = {":<c-u>TSTextobjectSelect @loop.outer<cr>", "Loop"},
        o = {":<c-u>TSTextobjectSelect @class.outer<cr>", "Class"},
        n = {
            name = "Next",
            B = {":<c-u>call v:lua.ts_target(v:count, '@block.outer')<cr>", "Block"},
            c = {":<c-u>call v:lua.ts_target(v:count, '@conditional.outer')<cr>", "Conditional"},
            [","] = {":<c-u>call v:lua.ts_target(v:count, '@parameter.outer')<cr>", "Parameter"},
            d = {":<c-u>call v:lua.ts_target(v:count, '@comment.outer')<cr>", "Comment"},
            f = {":<c-u>call v:lua.ts_target(v:count, '@function.outer')<cr>", "Function"},
            F = {":<c-u>call v:lua.ts_target(v:count, '@call.outer')<cr>", "Function"},
            l = {":<c-u>call v:lua.ts_target(v:count, '@loop.outer')<cr>", "Loop"},
            o = {":<c-u>call v:lua.ts_target(v:count, '@class.outer')<cr>", "Class"},
        },
        N = {
            name = "Previous",
            B = {":<c-u>call v:lua.ts_target_back(v:count, '@block.outer')<cr>", "Block"},
            c = {":<c-u>call v:lua.ts_target_back(v:count, '@conditional.outer')<cr>", "Conditional"},
            [","] = {":<c-u>call v:lua.ts_target_back(v:count, '@parameter.outer')<cr>", "Parameter"},
            d = {":<c-u>call v:lua.ts_target_back(v:count, '@comment.outer')<cr>", "Comment"},
            f = {":<c-u>call v:lua.ts_target_back(v:count, '@function.outer')<cr>", "Function"},
            F = {":<c-u>call v:lua.ts_target_back(v:count, '@call.outer')<cr>", "Function"},
            l = {":<c-u>call v:lua.ts_target_back(v:count, '@loop.outer')<cr>", "Loop"},
            o = {":<c-u>call v:lua.ts_target_back(v:count, '@class.outer')<cr>", "Class"},
        },
    },
    i = {
        name = "inside",
        B = {":<c-u>TSTextobjectSelect @block.inner<cr>", "Block"},
        c = {":<c-u>TSTextobjectSelect @conditional.inner<cr>", "Conditional"},
        [","] = {":<c-u>TSTextobjectSelect @parameter.inner<cr>", "Parameter"},
        d = {":<c-u>TSTextobjectSelect @comment.outer<cr>", "Comment"},
        f = {":<c-u>TSTextobjectSelect @function.inner<cr>", "Function"},
        F = {":<c-u>TSTextobjectSelect @call.inner<cr>", "Function"},
        l = {":<c-u>TSTextobjectSelect @loop.inner<cr>", "Loop"},
        o = {":<c-u>TSTextobjectSelect @class.inner<cr>", "Class"},
        n = {
            name = "Next",
            B = {":<c-u>call v:lua.ts_target(v:count, '@block.inner')<cr>", "Block"},
            c = {":<c-u>call v:lua.ts_target(v:count, '@conditional.inner')<cr>", "Conditional"},
            [","] = {":<c-u>call v:lua.ts_target(v:count, '@parameter.inner')<cr>", "Parameter"},
            d = {":<c-u>call v:lua.ts_target(v:count, '@comment.outer')<cr>", "Comment"},
            f = {":<c-u>call v:lua.ts_target(v:count, '@function.inner')<cr>", "Function"},
            F = {":<c-u>call v:lua.ts_target(v:count, '@call.inner')<cr>", "Function"},
            l = {":<c-u>call v:lua.ts_target(v:count, '@loop.inner')<cr>", "Loop"},
            o = {":<c-u>call v:lua.ts_target(v:count, '@class.inner')<cr>", "Class"},
        },
        N = {
            name = "Previous",
            B = {":<c-u>call v:lua.ts_target_back(v:count, '@block.inner')<cr>", "Block"},
            c = {":<c-u>call v:lua.ts_target_back(v:count, '@conditional.inner')<cr>", "Conditional"},
            [","] = {":<c-u>call v:lua.ts_target_back(v:count, '@parameter.inner')<cr>", "Parameter"},
            d = {":<c-u>call v:lua.ts_target_back(v:count, '@comment.outer')<cr>", "Comment"},
            f = {":<c-u>call v:lua.ts_target_back(v:count, '@function.inner')<cr>", "Function"},
            F = {":<c-u>call v:lua.ts_target_back(v:count, '@call.inner')<cr>", "Function"},
            l = {":<c-u>call v:lua.ts_target_back(v:count, '@loop.inner')<cr>", "Loop"},
            o = {":<c-u>call v:lua.ts_target_back(v:count, '@class.inner')<cr>", "Class"},
        },
    },
},{
    mode = "o"
})
